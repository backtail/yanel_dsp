#ifndef _YANEL_DSP_H_
#define _YANEL_DSP_H_

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>


/*
 Raw mutable pointer that implements the `Send` trait since it's only acting on stack memory
 */
typedef float *Mutable;

/*
 Struct
 */
typedef struct MemorySlice_Mutable {
    Mutable ptr;
    size_t length;
} MemorySlice_Mutable;

typedef struct DelayLine {
    struct MemorySlice_Mutable buffer;
    size_t index;
} DelayLine;

typedef struct SimpleDelay {
    struct DelayLine delay_line;
    float delay_samples;
    float feedback;
    float dry_gain;
    float wet_gain;
    bool delay_time_changed;
    float last_delay_samples;
    size_t crossfade_counter;
    size_t crossfade_samples;
} SimpleDelay;

/*
 Initializes `SimpleDelay` struct
 */
struct SimpleDelay simple_delay_init(void);

/*
 Initializes `SimpleDelay` delay buffer
 */
void simple_delay_set_buffer(struct SimpleDelay *ptr, float *buffer, size_t length);

/*
 Feedback can reach max. 100%
 */
void simple_delay_set_feedback(struct SimpleDelay *ptr, float feedback);

/*
 Sample rate depending calculations should be performed earlier!
 */
void simple_delay_set_length(struct SimpleDelay *ptr, float len_in_samples);

/*
 Dry/Wet mixing
 */
void simple_delay_set_mix(struct SimpleDelay *ptr, float mix);

/*
 Returns next sample
 */
float simple_delay_tick(struct SimpleDelay *ptr, float sample);

#endif  /* _YANEL_DSP_H_ */
